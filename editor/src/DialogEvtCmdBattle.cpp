// -*- C++ -*- generated by wxGlade 0.6.3 on Sun Feb 15 04:53:05 2009 from "/home/fdelapena/programacion/easyrpg/trunk/editor/wxglade/easyrpg.wxg"

#include "DialogEvtCmdBattle.h"

// begin wxGlade: ::extracode

// end wxGlade


DialogEvtCmdBattle::DialogEvtCmdBattle(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DialogEvtCmdBattle::DialogEvtCmdBattle
    szBackground_staticbox = new wxStaticBox(this, -1, _("Battle background"));
    szOptions_staticbox = new wxStaticBox(this, -1, _("Options"));
    szTroop_staticbox = new wxStaticBox(this, -1, _("Enemy troop"));
    rbtnTroopFixed = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString *chTroopFixed_choices = NULL;
    chTroopFixed = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, chTroopFixed_choices, 0);
    rbtnTroopVariable = new wxRadioButton(this, wxID_ANY, _("Variable"));
    tcTroopVariable = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnTroopVariable = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    rbtnBackgroundFromTerrain = new wxRadioButton(this, wxID_ANY, _("From terrain"));
    rbtnBackgroundSelect = new wxRadioButton(this, wxID_ANY, _("Select"));
    tcBackground = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnBackground = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    const wxString rbEscape_choices[] = {
        _("Deny"),
        _("Allow"),
        _("Condition")
    };
    rbEscape = new wxRadioBox(this, wxID_ANY, _("Escape"), wxDefaultPosition, wxDefaultSize, 3, rbEscape_choices, 1, wxRA_SPECIFY_ROWS);
    const wxString rbDefeat_choices[] = {
        _("Game over"),
        _("Condition")
    };
    rbDefeat = new wxRadioBox(this, wxID_ANY, _("On defeat"), wxDefaultPosition, wxDefaultSize, 2, rbDefeat_choices, 1, wxRA_SPECIFY_ROWS);
    chbAlliedFirst = new wxCheckBox(this, wxID_ANY, _("Allied first torn"));
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdBattle::set_properties()
{
    // begin wxGlade: DialogEvtCmdBattle::set_properties
    SetTitle(_("Start battle"));
    chTroopFixed->SetMinSize(wxSize(50, -1));
    tcTroopVariable->SetMinSize(wxSize(50, -1));
    tcBackground->SetMinSize(wxSize(50, -1));
    rbEscape->SetSelection(0);
    rbDefeat->SetSelection(0);
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdBattle::do_layout()
{
    // begin wxGlade: DialogEvtCmdBattle::do_layout
    wxBoxSizer* szBattle = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szMiddle = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* szOptions = new wxStaticBoxSizer(szOptions_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* szBackground = new wxStaticBoxSizer(szBackground_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* szTroop = new wxStaticBoxSizer(szTroop_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* gszTroop = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* szTroopVariable = new wxBoxSizer(wxHORIZONTAL);
    gszTroop->Add(rbtnTroopFixed, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszTroop->Add(chTroopFixed, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszTroop->Add(rbtnTroopVariable, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    szTroopVariable->Add(tcTroopVariable, 1, wxALIGN_CENTER_VERTICAL, 0);
    szTroopVariable->Add(btnTroopVariable, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTroop->Add(szTroopVariable, 1, wxEXPAND, 0);
    gszTroop->AddGrowableCol(1);
    szTroop->Add(gszTroop, 1, wxEXPAND, 0);
    szBattle->Add(szTroop, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szBackground->Add(rbtnBackgroundFromTerrain, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szBackground->Add(rbtnBackgroundSelect, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szBackground->Add(tcBackground, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    szBackground->Add(btnBackground, 0, wxALIGN_CENTER_VERTICAL, 0);
    szBattle->Add(szBackground, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szBattle->Add(rbEscape, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szMiddle->Add(rbDefeat, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    szOptions->Add(chbAlliedFirst, 1, wxALIGN_CENTER_VERTICAL, 0);
    szMiddle->Add(szOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    szBattle->Add(szMiddle, 0, wxEXPAND, 0);
    szBottom->Add(btnOK, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnCancel, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnHelp, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBattle->Add(szBottom, 1, wxRIGHT|wxBOTTOM|wxALIGN_RIGHT, 3);
    SetSizer(szBattle);
    szBattle->Fit(this);
    Layout();
    // end wxGlade
}

