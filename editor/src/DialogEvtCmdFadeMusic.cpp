// -*- C++ -*- generated by wxGlade 0.6.3 on Sun Feb 15 04:53:05 2009 from "/home/fdelapena/programacion/easyrpg/trunk/editor/wxglade/easyrpg.wxg"

#include "DialogEvtCmdFadeMusic.h"

// begin wxGlade: ::extracode

// end wxGlade


DialogEvtCmdFadeMusic::DialogEvtCmdFadeMusic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DialogEvtCmdFadeMusic::DialogEvtCmdFadeMusic
    szTime_staticbox = new wxStaticBox(this, -1, _("Fade time"));
    slTime = new wxSlider(this, wxID_ANY, 5, 0, 20, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    stTime0Seconds = new wxStaticText(this, wxID_ANY, _("0 sec"));
    stTime5Seconds = new wxStaticText(this, wxID_ANY, _("5 sec"));
    stTime10Seconds = new wxStaticText(this, wxID_ANY, _("10 sec"));
    stTime15Seconds = new wxStaticText(this, wxID_ANY, _("15 sec"));
    stTime20Seconds = new wxStaticText(this, wxID_ANY, _("20 sec"));
    btnFade = new wxButton(this, wxID_ANY, _("Fade"));
    btnPlay = new wxButton(this, wxID_ANY, _("Play"));
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdFadeMusic::set_properties()
{
    // begin wxGlade: DialogEvtCmdFadeMusic::set_properties
    SetTitle(_("Fade music"));
    slTime->SetMinSize(wxSize(200, -1));
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdFadeMusic::do_layout()
{
    // begin wxGlade: DialogEvtCmdFadeMusic::do_layout
    wxBoxSizer* szFadeMusic = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* szTime = new wxStaticBoxSizer(szTime_staticbox, wxHORIZONTAL);
    wxBoxSizer* szTimeLeft = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* slTimeBottom = new wxBoxSizer(wxHORIZONTAL);
    szTimeLeft->Add(slTime, 0, wxEXPAND, 0);
    slTimeBottom->Add(stTime0Seconds, 0, wxRIGHT, 1);
    slTimeBottom->Add(0, 0, 1, wxEXPAND, 0);
    slTimeBottom->Add(stTime5Seconds, 0, wxLEFT|wxRIGHT, 1);
    slTimeBottom->Add(0, 0, 1, wxEXPAND, 0);
    slTimeBottom->Add(stTime10Seconds, 0, wxLEFT|wxRIGHT, 1);
    slTimeBottom->Add(0, 0, 1, wxEXPAND, 0);
    slTimeBottom->Add(stTime15Seconds, 0, wxLEFT|wxRIGHT, 1);
    slTimeBottom->Add(0, 0, 1, wxEXPAND, 0);
    slTimeBottom->Add(stTime20Seconds, 0, wxLEFT, 1);
    szTimeLeft->Add(slTimeBottom, 0, wxEXPAND, 0);
    szTime->Add(szTimeLeft, 1, wxEXPAND, 0);
    szTime->Add(btnFade, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szTime->Add(btnPlay, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    szFadeMusic->Add(szTime, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    szBottom->Add(btnOK, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnCancel, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnHelp, 0, wxALL|wxALIGN_BOTTOM, 1);
    szFadeMusic->Add(szBottom, 1, wxRIGHT|wxBOTTOM|wxALIGN_RIGHT, 3);
    SetSizer(szFadeMusic);
    szFadeMusic->Fit(this);
    Layout();
    // end wxGlade
}

