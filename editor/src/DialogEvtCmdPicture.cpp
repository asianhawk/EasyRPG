// -*- C++ -*- generated by wxGlade 0.6.3 on Sun Feb 15 04:53:05 2009 from "/home/fdelapena/programacion/easyrpg/trunk/editor/wxglade/easyrpg.wxg"

#include "DialogEvtCmdPicture.h"

// begin wxGlade: ::extracode

// end wxGlade


DialogEvtCmdPicture::DialogEvtCmdPicture(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long WXUNUSED(style)):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX)
{
    // begin wxGlade: DialogEvtCmdPicture::DialogEvtCmdPicture
    szPicture2_staticbox = new wxStaticBox(this, -1, _("Picture"));
    szPosition_staticbox = new wxStaticBox(this, -1, _("Picture position (coordinates)"));
    szIntensity_staticbox = new wxStaticBox(this, -1, _("Intensity"));
    szTrasparency_staticbox = new wxStaticBox(this, -1, _("Transparency"));
    szAttributes_staticbox = new wxStaticBox(this, -1, _("Other picture attributes"));
    szNumber_staticbox = new wxStaticBox(this, -1, _("Picture number"));
    spinNumber = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    tcPicture = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnPicture = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    rbtnSpecify = new wxRadioButton(this, wxID_ANY, _("Specify"));
    stSpecifyX = new wxStaticText(this, wxID_ANY, _("X:"));
    spinSpecifyX = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    stSpecifyY = new wxStaticText(this, wxID_ANY, _("Y:"));
    spinSpecifyY = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    rbtnVariable = new wxRadioButton(this, wxID_ANY, _("Variable"));
    stVariableX = new wxStaticText(this, wxID_ANY, _("X:"));
    tcVariableX = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnVariableX = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    stVariableY = new wxStaticText(this, wxID_ANY, _("Y:"));
    tcVariableY = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnVariableY = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    linePicture = new wxStaticLine(this, wxID_ANY);
    chbScrollMapFix = new wxCheckBox(this, wxID_ANY, _("Scroll map fix"));
    spinIntensity = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    stIntensity = new wxStaticText(this, wxID_ANY, _("%"));
    spinTrasparency = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    stTrasparency = new wxStaticText(this, wxID_ANY, _("%"));
    const wxString rbTrasparentColor_choices[] = {
        _("Yes"),
        _("No")
    };
    rbTrasparentColor = new wxRadioBox(this, wxID_ANY, _("Transparent color"), wxDefaultPosition, wxDefaultSize, 2, rbTrasparentColor_choices, 1, wxRA_SPECIFY_ROWS);
    tcAttributes = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnAttributes = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdPicture::set_properties()
{
    // begin wxGlade: DialogEvtCmdPicture::set_properties
    SetTitle(_("Show picture"));
    spinNumber->SetMinSize(wxSize(90, -1));
    tcPicture->SetMinSize(wxSize(50, -1));
    spinSpecifyX->SetMinSize(wxSize(50, -1));
    spinSpecifyY->SetMinSize(wxSize(50, -1));
    tcVariableX->SetMinSize(wxSize(50, -1));
    tcVariableY->SetMinSize(wxSize(50, -1));
    spinIntensity->SetMinSize(wxSize(50, -1));
    spinTrasparency->SetMinSize(wxSize(70, -1));
    rbTrasparentColor->SetMinSize(wxSize(110, -1));
    rbTrasparentColor->SetSelection(0);
    tcAttributes->SetMinSize(wxSize(50, -1));
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdPicture::do_layout()
{
    // begin wxGlade: DialogEvtCmdPicture::do_layout
    wxBoxSizer* szPicture = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* szAttributes = new wxStaticBoxSizer(szAttributes_staticbox, wxHORIZONTAL);
    wxBoxSizer* szMiddle = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* szTrasparency = new wxStaticBoxSizer(szTrasparency_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* szIntensity = new wxStaticBoxSizer(szIntensity_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* szPosition = new wxStaticBoxSizer(szPosition_staticbox, wxVERTICAL);
    wxFlexGridSizer* gszPosition = new wxFlexGridSizer(4, 3, 2, 2);
    wxBoxSizer* szVariableY = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szVariableX = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szTop = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* szPicture2 = new wxStaticBoxSizer(szPicture2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* szNumber = new wxStaticBoxSizer(szNumber_staticbox, wxHORIZONTAL);
    szNumber->Add(spinNumber, 0, wxALIGN_CENTER_VERTICAL, 0);
    szTop->Add(szNumber, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szPicture2->Add(tcPicture, 1, wxALIGN_CENTER_VERTICAL, 0);
    szPicture2->Add(btnPicture, 0, wxALIGN_CENTER_VERTICAL, 0);
    szTop->Add(szPicture2, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szPicture->Add(szTop, 0, wxEXPAND, 0);
    gszPosition->Add(rbtnSpecify, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszPosition->Add(stSpecifyX, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszPosition->Add(spinSpecifyX, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    gszPosition->Add(0, 0, 1, wxEXPAND, 0);
    gszPosition->Add(stSpecifyY, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszPosition->Add(spinSpecifyY, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    gszPosition->Add(rbtnVariable, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszPosition->Add(stVariableX, 0, wxALIGN_CENTER_VERTICAL, 0);
    szVariableX->Add(tcVariableX, 1, wxALIGN_CENTER_VERTICAL, 0);
    szVariableX->Add(btnVariableX, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszPosition->Add(szVariableX, 1, wxEXPAND, 0);
    gszPosition->Add(0, 0, 1, wxEXPAND, 0);
    gszPosition->Add(stVariableY, 0, wxALIGN_CENTER_VERTICAL, 0);
    szVariableY->Add(tcVariableY, 1, wxALIGN_CENTER_VERTICAL, 0);
    szVariableY->Add(btnVariableY, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszPosition->Add(szVariableY, 1, wxEXPAND, 0);
    gszPosition->AddGrowableCol(2);
    szPosition->Add(gszPosition, 1, wxBOTTOM|wxEXPAND, 1);
    szPosition->Add(linePicture, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    szPosition->Add(chbScrollMapFix, 0, wxTOP|wxEXPAND, 1);
    szPicture->Add(szPosition, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szIntensity->Add(spinIntensity, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szIntensity->Add(stIntensity, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    szMiddle->Add(szIntensity, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szTrasparency->Add(spinTrasparency, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szTrasparency->Add(stTrasparency, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    szMiddle->Add(szTrasparency, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szMiddle->Add(rbTrasparentColor, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szPicture->Add(szMiddle, 0, wxEXPAND, 0);
    szAttributes->Add(tcAttributes, 1, wxALIGN_CENTER_VERTICAL, 0);
    szAttributes->Add(btnAttributes, 0, wxALIGN_CENTER_VERTICAL, 0);
    szPicture->Add(szAttributes, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    szBottom->Add(btnOK, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnCancel, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnHelp, 0, wxALL|wxALIGN_BOTTOM, 1);
    szPicture->Add(szBottom, 1, wxRIGHT|wxBOTTOM|wxALIGN_RIGHT, 3);
    SetSizer(szPicture);
    szPicture->Fit(this);
    Layout();
    // end wxGlade
}

