// -*- C++ -*- generated by wxGlade 0.6.3 on Sun Feb 15 04:53:05 2009 from "/home/fdelapena/programacion/easyrpg/trunk/editor/wxglade/easyrpg.wxg"

#include "DialogEvtCmdTone.h"

// begin wxGlade: ::extracode

// end wxGlade


DialogEvtCmdTone::DialogEvtCmdTone(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long WXUNUSED(style)):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX)
{
    // begin wxGlade: DialogEvtCmdTone::DialogEvtCmdTone
    szTone2_staticbox = new wxStaticBox(this, -1, _("Tone"));
    szTime_staticbox = new wxStaticBox(this, -1, _("Apply tone change"));
    szOptions_staticbox = new wxStaticBox(this, -1, _("Options"));
    szPreview_staticbox = new wxStaticBox(this, -1, _("Preview"));
    st0Percent = new wxStaticText(this, wxID_ANY, _("0%"));
    st100Percent = new wxStaticText(this, wxID_ANY, _("  100%"));
    st200Percent = new wxStaticText(this, wxID_ANY, _("200%"));
    stRed = new wxStaticText(this, wxID_ANY, _("Red"));
    slRed = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spinRed = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    stRedPercent = new wxStaticText(this, wxID_ANY, _("%"));
    stGreen = new wxStaticText(this, wxID_ANY, _("Green"));
    slGreen = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spinGreen = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    stGreenPercent = new wxStaticText(this, wxID_ANY, _("%"));
    stBlue = new wxStaticText(this, wxID_ANY, _("Blue"));
    slBlue = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spinBlue = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    stBluePercent = new wxStaticText(this, wxID_ANY, _("%"));
    stSaturation = new wxStaticText(this, wxID_ANY, _("Saturation"));
    slSaturation = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spinSaturation = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    stSaturationPercent = new wxStaticText(this, wxID_ANY, _("%"));
    bmpPreview = new wxStaticBitmap(this, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    SpinTime = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    stTime = new wxStaticText(this, wxID_ANY, _("x0.1 sec."));
    chbWait = new wxCheckBox(this, wxID_ANY, _("Wait to end change"));
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdTone::set_properties()
{
    // begin wxGlade: DialogEvtCmdTone::set_properties
    SetTitle(_("Change screen tone"));
    slRed->SetMinSize(wxSize(200, -1));
    spinRed->SetMinSize(wxSize(50, -1));
    slGreen->SetMinSize(wxSize(200, -1));
    spinGreen->SetMinSize(wxSize(50, -1));
    slBlue->SetMinSize(wxSize(200, -1));
    spinBlue->SetMinSize(wxSize(50, -1));
    slSaturation->SetMinSize(wxSize(200, -1));
    spinSaturation->SetMinSize(wxSize(50, -1));
    bmpPreview->SetMinSize(wxSize(200, 32));
    SpinTime->SetMinSize(wxSize(50, -1));
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdTone::do_layout()
{
    // begin wxGlade: DialogEvtCmdTone::do_layout
    wxBoxSizer* szTone = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szMiddle = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* szOptions = new wxStaticBoxSizer(szOptions_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* szTime = new wxStaticBoxSizer(szTime_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* szTone2 = new wxStaticBoxSizer(szTone2_staticbox, wxVERTICAL);
    wxStaticBoxSizer* szPreview = new wxStaticBoxSizer(szPreview_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* gszTone = new wxFlexGridSizer(5, 4, 2, 2);
    wxBoxSizer* szPercent = new wxBoxSizer(wxHORIZONTAL);
    gszTone->Add(0, 0, 0, wxEXPAND, 0);
    szPercent->Add(st0Percent, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szPercent->Add(0, 0, 1, wxEXPAND, 0);
    szPercent->Add(st100Percent, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szPercent->Add(0, 0, 1, wxEXPAND, 0);
    szPercent->Add(st200Percent, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    gszTone->Add(szPercent, 1, wxEXPAND, 0);
    gszTone->Add(0, 0, 0, wxEXPAND, 0);
    gszTone->Add(0, 0, 0, wxEXPAND, 0);
    gszTone->Add(stRed, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(slRed, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(spinRed, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(stRedPercent, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(stGreen, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(slGreen, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(spinGreen, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(stGreenPercent, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(stBlue, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(slBlue, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(spinBlue, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(stBluePercent, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(stSaturation, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(slSaturation, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(spinSaturation, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->Add(stSaturationPercent, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszTone->AddGrowableCol(1);
    szTone2->Add(gszTone, 0, wxEXPAND, 0);
    szPreview->Add(bmpPreview, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    szTone2->Add(szPreview, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    szTone->Add(szTone2, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    szTime->Add(SpinTime, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    szTime->Add(stTime, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    szMiddle->Add(szTime, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    szOptions->Add(chbWait, 1, wxALIGN_CENTER_VERTICAL, 0);
    szMiddle->Add(szOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    szTone->Add(szMiddle, 0, wxEXPAND, 0);
    szBottom->Add(btnOK, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnCancel, 0, wxALL|wxALIGN_BOTTOM, 1);
    szBottom->Add(btnHelp, 0, wxALL|wxALIGN_BOTTOM, 1);
    szTone->Add(szBottom, 1, wxRIGHT|wxBOTTOM|wxALIGN_RIGHT, 3);
    SetSizer(szTone);
    szTone->Fit(this);
    Layout();
    // end wxGlade
}

