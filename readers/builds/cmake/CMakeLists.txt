CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(EasyRPG_Reader CXX C)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../lib)
LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../lib)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/../../src SRCS)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../include)

# Doxygen
FIND_PACKAGE(Doxygen REQUIRED)
ADD_CUSTOM_TARGET(reader_doc
	${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/../Doxyfile
	DEPENDS ${SRCS}
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..
	COMMENT "Generating API documentation with Doxygen" VERBATIM
)

# endianess checking
INCLUDE(TestBigEndian)
TEST_BIG_ENDIAN(IS_BIG_ENDIAN)
IF(IS_BIG_ENDIAN)
	ADD_DEFINITIONS(-D READER_BIG_ENDIAN=1)
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} STATIC ${SRCS})
IF(APPLE)
	INCLUDE_DIRECTORIES(/opt/local/include)
	LINK_DIRECTORIES(/opt/local/lib)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} iconv)
ENDIF()

# test
ENABLE_TESTING()

INCLUDE(FindThreads REQUIRED)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../src)

FUNCTION(CXX_TEST target libs)
	ADD_EXECUTABLE(test_${target} ${CMAKE_CURRENT_SOURCE_DIR}/../../test/${target}.cpp)
	TARGET_LINK_LIBRARIES(test_${target}
		${PROJECT_NAME}
		${libs}
		"gtest"
	)
	TARGET_LINK_LIBRARIES(test_${target} ${CMAKE_THREAD_LIBS_INIT})
	ADD_TEST(
		NAME test_${target}
		WORKING_DIRECTORY ${EXECUTABLE_OUTPUT_PATH}
		COMMAND ${EXECUTABLE_OUTPUT_PATH}/test_${target}
	)
	ADD_DEPENDENCIES(test_${target} ${PROJECT_NAME})
ENDFUNCTION()

SET(CXX_TEST_SOURCES "time_stamp;")
FOREACH(i ${CXX_TEST_SOURCES})
	CXX_TEST(${i} "gtest_main")
ENDFOREACH()
