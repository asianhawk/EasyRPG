CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(EasyRPG_Reader CXX C)

# Doxygen
FIND_PACKAGE(Doxygen REQUIRED)
ADD_CUSTOM_TARGET(reader_doc
	${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/../Doxyfile
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..
	COMMENT "Generating API documentation with Doxygen" VERBATIM
)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/../../src SRCS)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../include)

IF(${APPLE})
	INCLUDE_DIRECTORIES(/opt/local/include)
ENDIF()

# endianess checking
INCLUDE(TestBigEndian)
TEST_BIG_ENDIAN(IS_BIG_ENDIAN)
IF(${IS_BIG_ENDIAN})
	ADD_DEFINITIONS(-D READER_BIG_ENDIAN=1)
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} STATIC ${SRCS})
IF(${APPLE})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} iconv)
ENDIF()

# test
ENABLE_TESTING()

INCLUDE(FindThreads REQUIRED)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../src)

FUNCTION(CXX_TEST target libs)
	ADD_EXECUTABLE(test_${target} ${CMAKE_CURRENT_SOURCE_DIR}/../../test/${target}.cpp)
	TARGET_LINK_LIBRARIES(test_${target}
		${PROJECT_NAME}
		${libs}
		"gtest"
	)
	IF(${UNIX})
		TARGET_LINK_LIBRARIES(test_${target} ${CMAKE_THREAD_LIBS_INIT})
	ENDIF()
	ADD_TEST(
		NAME test_${target}
		WORKING_DIRECTORY ${EXECUTABLE_OUTPUT_PATH}
		COMMAND ${EXECUTABLE_OUTPUT_PATH}/test_${target}
	)
	ADD_DEPENDENCIES(test_${target} ${PROJECT_NAME})

	SET(TEST_TARGET "${TEST_TARGET};test_${target}" PARENT_SCOPE)
ENDFUNCTION()

IF(${APPLE})
	LINK_DIRECTORIES(/opt/local/lib)
ENDIF()

CXX_TEST(time_stamp "gtest_main")

# borrowed from
# http://stackoverflow.com/questions/733475/cmake-ctest-make-test-doesnt-build-tests
ADD_CUSTOM_TARGET(check_reader COMMAND ${CMAKE_CTEST_COMMAND} DEPENDS ${TEST_TARGET})
