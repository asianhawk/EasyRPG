/////////////////////////////////////////////////////////////////////////////
// This file is part of EasyRPG.
//
// EasyRPG is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// EasyRPG is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with EasyRPG Player. If not, see <http://www.gnu.org/licenses/>.
/////////////////////////////////////////////////////////////////////////////

#ifndef _EASYRPG_READER_DATA_H_
#define _EASYRPG_READER_DATA_H_

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <string>
#include "reader_options.h"
#include "rpg_database.h"
#include "rpg_treemap.h"
#include "rpg_map.h"
#include "rpg_save.h"

////////////////////////////////////////////////////////////
/// Data namespace
////////////////////////////////////////////////////////////
namespace Data {
	/// Database (ldb)
	extern RPG::Database database;
	/// TreeMap (lmt)
	extern RPG::TreeMap treemap;
	/// Msp Unit (lmu)
	extern RPG::Map mapunit;
	/// Save Data (lsd)
	extern RPG::Save savedata;

	////////////////////////////////////////////////////////
	/// Set base directory of project.
	////////////////////////////////////////////////////////
	void SetBaseDirectory(std::string const& dir = "./");

	////////////////////////////////////////////////////////
	/// Convert all data in base directory to Boost.Serialization format.
	////////////////////////////////////////////////////////
	void Convert();

	////////////////////////////////////////////////////////
	/// Load serialized data.
	/// @param filename : target filename
	////////////////////////////////////////////////////////
	bool Load(std::string const& filename = EASY_RPG_NAME);

	////////////////////////////////////////////////////////
	/// Save serialized data.
	/// @param filename : target filename
	////////////////////////////////////////////////////////
	void Save();

	////////////////////////////////////////////////////////
	/// Load serialized map unit.
	/// @param filename : target filename
	////////////////////////////////////////////////////////
	bool LoadMapUnit(std::string const& filename);

	////////////////////////////////////////////////////////
	/// Load serialized map unit.
	/// @param id : target map id
	////////////////////////////////////////////////////////
	bool LoadMapUnit(int id);

	////////////////////////////////////////////////////////
	/// Load serialized save data.
	/// @param filename : target filename
	////////////////////////////////////////////////////////
	bool LoadSaveData(std::string const& filename);

	////////////////////////////////////////////////////////
	/// Load serialized save data.
	/// @param id : target save id
	////////////////////////////////////////////////////////
	bool LoadSaveData(int id);

	////////////////////////////////////////////////////////
	/// Save save data.
	////////////////////////////////////////////////////////
	void SaveSaveData();

	////////////////////////////////////////////////////////
	/// Save map unit.
	////////////////////////////////////////////////////////
	void SaveMapUnit();
}

#endif
