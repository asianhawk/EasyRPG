CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(EasyRPG_Player CXX C)

# reader
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/../../../readers/builds/cmake ${CMAKE_CURRENT_SOURCE_DIR}/../../../readers/builds/cmake)

# Doxygen
FIND_PACKAGE(Doxygen REQUIRED)
ADD_CUSTOM_TARGET(doc
	${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/../Doxyfile
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..
	COMMENT "Generating API documentation with Doxygen" VERBATIM
)

# FIND_PACKAGE(Boost COMPONENTS serialization REQUIRED)
FIND_PACKAGE(Freetype REQUIRED)
FIND_PACKAGE(JPEG REQUIRED)
FIND_PACKAGE(PNG REQUIRED)
FIND_PACKAGE(SDL REQUIRED)
FIND_PACKAGE(SDL_image REQUIRED)
FIND_PACKAGE(SDL_mixer REQUIRED)
FIND_PACKAGE(SDL_ttf REQUIRED)
FIND_PACKAGE(ZLIB REQUIRED)

# SET(USE_OPENAL 1)

ADD_DEFINITIONS(
	${PNG_DEFINITIONS}

	-D UNIX=1
	-D USE_SDL=1
	-D USE_PIXMAN_BITMAP=1

	-Wall -Werror # -Wextra
	-Wno-mismatched-tags
	-fno-exceptions -fno-rtti
)

IF(${USE_OPENAL})
	FIND_PACKAGE(OpenAL REQUIRED)
	INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIR})
	ADD_DEFINITIONS(-D USE_OPENAL=1)
ENDIF()

# endianess check
INCLUDE(TestBigEndian)
TEST_BIG_ENDIAN(IS_BIG_ENDIAN)
IF(${IS_BIG_ENDIAN})
	ADD_DEFINITIONS(-D READER_BIG_ENDIAN=1)
ENDIF()

IF(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
	ADD_DEFINITIONS(-D _DEBUG=1)
ENDIF()

IF(${APPLE})
	ADD_DEFINITIONS(-D COCOA=1)
ENDIF()

IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	ADD_DEFINITIONS(-D GTK=1)
ENDIF()

# include directory
INCLUDE_DIRECTORIES(
	# ${Boost_INCLUDE_DIRS}
	${FREETYPE_INCLUDE_DIRS}
	${JPEG_INCLUDE_DIR}
	${PNG_INCLUDE_DIR}
	${SDL_INCLUDE_DIR}
	${SDLIMAGE_INCLUDE_DIR}
	${SDLMIXER_INCLUDE_DIR}
	${SDLTTF_INCLUDE_DIR}
	${ZLIB_INCLUDE_DIRS}

	${CMAKE_CURRENT_SOURCE_DIR}/../../../readers/include
	/opt/local/include/pixman-1
	/usr/include/pixman-1
	/usr/local/include/pixman-1
)

# library
SET(EASYRPG_PLAYER_LIBRARIES
	# ${Boost_LIBRARIES}
	${FREETYPE_LIBRARIES}
	${JPEG_LIBRARIES}
	${PNG_LIBRARIES}
	${SDL_LIBRARY}
	${SDLIMAGE_LIBRARY}
	${SDLMIXER_LIBRARY}
	${SDLTTF_LIBRARY}
	${ZLIB_LIBRARIES}

	EasyRPG_Reader
	EasyRPG_Player_Static

	expat
	pixman-1
)
IF(${USE_OPENAL})
	SET(EASYRPG_PLAYER_LIBRARIES
		avformat avcodec avutil avdevice
		${OPENAL_LIBRARY}
		${EASYRPG_PLAYER_LIBRARIES}
	)
ENDIF()
IF(${APPLE})
	SET(EASYRPG_PLAYER_LIBRARIES
		iconv
		${EASYRPG_PLAYER_LIBRARIES}
	)
ENDIF()

# static library
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/../../src SRCS)
LINK_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
FOREACH(i ${SRCS})
	STRING(REPLACE "${CMAKE_CURRENT_SOURCE_DIR}/../../src/main.cpp" "" REPLACED ${i})
	SET(LIB_SRCS "${LIB_SRCS};${REPLACED}")
ENDFOREACH()
ADD_LIBRARY(EasyRPG_Player_Static STATIC ${LIB_SRCS})

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../bin/testgame)
ADD_EXECUTABLE(${PROJECT_NAME} MACOSX_BUNDLE ${CMAKE_CURRENT_SOURCE_DIR}/../../src/main.cpp)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${EASYRPG_PLAYER_LIBRARIES})

ADD_DEPENDENCIES(${PROJECT_NAME} EasyRPG_Reader EasyRPG_Player_Static)

# test
ENABLE_TESTING()

ADD_LIBRARY(sdl_test_main STATIC ${CMAKE_CURRENT_SOURCE_DIR}/sdl_test_main.cpp)

INCLUDE(FindThreads REQUIRED)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../src)

FUNCTION(CXX_TEST target libs)
	ADD_EXECUTABLE(test_${target} ${CMAKE_CURRENT_SOURCE_DIR}/../../test/${target}.cpp)
	TARGET_LINK_LIBRARIES(test_${target}
		${EASYRPG_PLAYER_LIBRARIES}
		${libs}
		"gtest"
	)
	IF(${UNIX})
		TARGET_LINK_LIBRARIES(test_${target} ${CMAKE_THREAD_LIBS_INIT})
	ENDIF()
	ADD_TEST(
		NAME test_${target}
		WORKING_DIRECTORY ${EXECUTABLE_OUTPUT_PATH}
		COMMAND ${EXECUTABLE_OUTPUT_PATH}/test_${target}
	)
	ADD_DEPENDENCIES(test_${target} ${PROJECT_NAME})

	SET(TEST_TARGET "${TEST_TARGET};test_${target}" PARENT_SCOPE)
ENDFUNCTION()

IF(${APPLE})
	LINK_DIRECTORIES(/opt/local/lib)
ENDIF()

CXX_TEST(filefinder "sdl_test_main")
CXX_TEST(utils "sdl_test_main")

# borrowed from
# http://stackoverflow.com/questions/733475/cmake-ctest-make-test-doesnt-build-tests
ADD_CUSTOM_TARGET(check COMMAND ${CMAKE_CTEST_COMMAND} DEPENDS ${TEST_TARGET})
