/////////////////////////////////////////////////////////////////////////////
// This file is part of EasyRPG Player.
//
// EasyRPG Player is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// EasyRPG Player is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with EasyRPG Player. If not, see <http://www.gnu.org/licenses/>.
/////////////////////////////////////////////////////////////////////////////

#ifndef _WINDOW_INPUTNUMBER_H_
#define _WINDOW_INPUTNUMBER_H_

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "window_base.h"

////////////////////////////////////////////////////////////
/// Window Input Number Class
/// The number input window
////////////////////////////////////////////////////////////
class Window_InputNumber : public Window_Base {
public:
	////////////////////////////////////////////////////////
	/// Constructor
	/// @param idigits_max : The maximum number of digits 
	///	allowed
	////////////////////////////////////////////////////////
	Window_InputNumber(unsigned int idigits_max);
	
	////////////////////////////////////////////////////////
	/// Destructor
	////////////////////////////////////////////////////////
	~Window_InputNumber();
	
	////////////////////////////////////////////////////////
	/// Updates the Window's contents
	////////////////////////////////////////////////////////
	void Refresh();
	
	////////////////////////////////////////////////////////
	/// Returns the number value
	////////////////////////////////////////////////////////
	int GetNumber();
	
	////////////////////////////////////////////////////////
	/// Sets a new number value
	/// @param inumber : The new number value
	////////////////////////////////////////////////////////
	void SetNumber(unsigned int inumber);
	
	////////////////////////////////////////////////////////
	/// Updates the position of the cursor rectangle
	////////////////////////////////////////////////////////
	void UpdateCursorRect();
	
	////////////////////////////////////////////////////////
	/// Updates number value according to user input
	////////////////////////////////////////////////////////
	void Update();
	
protected:
	unsigned int number;
	unsigned int digits_max;
	unsigned int cursor_width;
	unsigned int index;
};

#endif
